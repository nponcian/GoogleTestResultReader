#!/bin/bash

func_displayhelp()
{
    echo "This will display the googletest result of execution from a compiled executable."
    echo
    echo "USAGE:"
    echo
    echo "1. ./readgtest --help"
    echo "        At your service when you need help!"
    echo
    echo "2. ./readgtest /Absolute/Path/To/Compiled/Executable/Running/Tests"
    echo "   ./readgtest ../Relative/Path/To/Compiled/Executable/Running/Tests"
    echo "   ./readgtest CompiledExecutableRunningTests"
    echo "   ./readgtest ./CompiledExecutableRunningTests"
    echo "        Display the result of the whole run of all testcases."
    echo
    echo "3. Append commands in #2 above but with additional flag <--all>"
    echo "   example: ./readgtest CompiledExecutableRunningTests --all"
    echo "        Same output as #2"
    echo
    echo "4. Append commands in #2 above but with additional flag and argument <--test TestCaseName>"
    echo "   example: ./readgtest CompiledExecutableRunningTests --test FactorialTest"
    echo "        Display the result of the run of the target testcase."
    echo
}

func_displaygoogletestline()
{
    local line="${1}"

    local RED='\033[0;31m'
    local GREEN='\033[0;32m'
    local WHITE='\033[0;37m'

    if [[ ${line} =~ "[  FAILED  ]" ]]; then
        echo -e "${RED}${line}"
    elif [[ ${line} =~ "[==========]" ||
            ${line} =~ "[----------]" ||
            ${line} =~ "[ RUN      ]" ||
            ${line} =~ "[       OK ]" ]]; then
        echo -e "${GREEN}${line}"
    else
        echo -e "${WHITE}${line}"
    fi
}

readgtest()
{
    if [ $# -eq 0 ]; then
        echo "No arguments supplied. Input --help for more information."
        return
    fi

    if [ "${1}" == "--help" ]; then
        func_displayhelp

    elif [ "$#" == "1" ]; then
        (./"${1}")

    elif [ "${2}" == "--all" ]; then
        (./"${1}")

    elif [ "${2}" == "--test" ]; then
        local testName="${3}"
        local waitingForResult=false

        (./"${1}") > readgtest_all.tmp

        while read line; do
            if [[ ${line} =~ ${testName} ]]; then
                func_displaygoogletestline "${line}"

                if [[ ${line} =~ "[ RUN      ]" ]]; then
                    waitingForResult=true
                elif [[ ${line} =~ "[       OK ]" ||
                        ${line} =~ "[  FAILED  ]" ]]; then
                    waitingForResult=false
                fi

            elif ${waitingForResult} ; then
                func_displaygoogletestline "${line}"
            fi
        done < readgtest_all.tmp

    fi
}

readgtest ${@}
rm -rf *.tmp
